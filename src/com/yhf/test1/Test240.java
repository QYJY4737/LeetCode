package com.yhf.test1;

import java.util.Arrays;
import java.util.Scanner;

/**
 * Created on 2023/8/15.
 *
 * @author qyjy4737
 */
public class Test240 {
    /**
     * 题目0240-新学校选址
     * 题目描述
     * 为了解新学期学生暴涨的问题,小乐村要建立所新学校，
     * 考虑到学生上学安全问题,需要所有学生家到学校的距离最短。
     * 假设学校和所有学生家都走在一条直线之上,请问学校建立在什么位置，
     * 能使得到学校到各个学生家的距离和最短。
     * <p>
     * 输入描述
     * 第一行: 整数 nnn 取值范围 [1 ,1000 ],表示有 nnn 户家庭。
     * 第二行: 一组整数 mmm 取值范围 [0, 10000 ] ，表示每户家庭的位置，所有家庭的位置都不相同。
     * <p>
     * 输出描述
     * 一个整数，确定的学校的位置。
     * 如果有多个位置，则输出最小的。
     * <p>
     * 示例一
     * 输入
     * 5
     * 0 20 40 10 30
     * 输出
     * 20
     * 说明
     * 20到各个家庭的距离分别为20 0 20 10 10，总和为60，最小。
     * <p>
     * 示例二
     * 输入
     * 1
     * 20
     * 输出
     * 20
     * 说明
     * 只有一组数据，20到20距离最小，为0
     * <p>
     * 示例三
     * 输入
     * 2
     * 0 20
     * 输出
     * 0
     * 说明
     * 有多个地方可选，但是0数值最小
     * <p>
     * 思路解析和复杂度分析
     * 思路解析
     * 这个问题的解决思路基于数学中的中位数的定义和特性。中位数是一组数中，使得这个数的左边和右边的元素个数相等的数。在数学统计中，如果一组数的分布是对称的，那么中位数就是这组数的平均值。而在这个问题中，我们要找的是一组点中的某一个点，使得其他所有点到这个点的距离之和最小，这个点就是这组点的中位数。
     * <p>
     * 在计算过程中，首先读取所有家庭的位置，然后对这些位置进行排序。排序后的数组中，中间的那个元素就是我们要找的学校应该建立的位置。如果家庭的数量是奇数，那么这个位置就是正中间的位置；如果是偶数，那么任何两个中间位置都可以，因为题目要求输出最小的，所以我们选取较小的那个位置。
     * <p>
     * 复杂度分析：
     * 时间复杂度：排序的时间复杂度为 O(n log n)，其中 n 为家庭的数量。排序之后，取中位数的操作时间复杂度为 O(1)。所以总的时间复杂度为 O(n log n)。
     * <p>
     * 空间复杂度：我们需要一个数组来存储所有家庭的位置，所以空间复杂度为 O(n)，其中 n 为家庭的数量。
     * <p>
     * 总的来说，这个问题的解决思路清晰，实现起来也较为简单。而且在时间和空间复杂度上，这个算法也是相对优秀的。
     */

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] locations = new int[n];

        for (int i = 0; i < n; i++) {
            locations[i] = scanner.nextInt();
        }

        // 使用 Arrays.sort 进行排序
        Arrays.sort(locations);

        // 打印中位数
        System.out.println(locations[(n - 1) / 2]);
    }
}
